{"ast":null,"code":"var _jsxFileName = \"/Users/zaiba/Desktop/WebDev/in-chat-nito/react-backend/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import './App.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nvar app = require('express')(); //express is handler \n\n\nvar http = require('http').Server(app); //express handles http , app is gonna handle http \n\n\nvar io = require('socket.io')(http);\n\napp.get('/', function (req, res) {\n  res.sendFile(__dirname + '/index.html');\n});\nio.on('connection', function (socket) {\n  //listens to see if anyone sent a message on socket and sends message\n  socket.on('chat message', function (msg) {\n    // console.log('message: ' + msg); //will send message on console\n    io.emit('chat message', msg); //send message to everyone including sender \n  });\n});\nhttp.listen(3000, function () {\n  //http is listening on the port 3000\n  console.log('listening on *:3000');\n});\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/zaiba/Desktop/WebDev/in-chat-nito/react-backend/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","app","require","http","Server","io","get","req","res","sendFile","__dirname","on","socket","msg","emit","listen","console","log","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AACA,IAAIC,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAP,EAAV,C,CAAgC;;;AAChC,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAP,CAAgBE,MAAhB,CAAuBH,GAAvB,CAAX,C,CAAwC;;;AACxC,IAAII,EAAE,GAAGH,OAAO,CAAC,WAAD,CAAP,CAAqBC,IAArB,CAAT;;AACAF,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC3BA,EAAAA,GAAG,CAACC,QAAJ,CAAaC,SAAS,GAAG,aAAzB;AACD,CAFH;AAIAL,EAAE,CAACM,EAAH,CAAM,YAAN,EAAoB,UAASC,MAAT,EAAgB;AAAE;AAClCA,EAAAA,MAAM,CAACD,EAAP,CAAU,cAAV,EAA0B,UAASE,GAAT,EAAa;AACpC;AACAR,IAAAA,EAAE,CAACS,IAAH,CAAQ,cAAR,EAAwBD,GAAxB,EAFoC,CAEN;AAC9B,GAHH;AAIC,CALL;AAOAV,IAAI,CAACY,MAAL,CAAY,IAAZ,EAAkB,YAAU;AAAE;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACG,CAFP;AAIAnB,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nvar app = require('express')(); //express is handler \nvar http = require('http').Server(app); //express handles http , app is gonna handle http \nvar io = require('socket.io')(http);\napp.get('/', function(req, res){\n    res.sendFile(__dirname + '/index.html');\n  });\n\nio.on('connection', function(socket){ //listens to see if anyone sent a message on socket and sends message\n    socket.on('chat message', function(msg){\n       // console.log('message: ' + msg); //will send message on console\n       io.emit('chat message', msg); //send message to everyone including sender \n      });\n    });\n\nhttp.listen(3000, function(){ //http is listening on the port 3000\n    console.log('listening on *:3000');\n      });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}